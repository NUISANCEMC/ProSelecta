@PACKAGE_INIT@

set(ProSelecta_VERSION @PROJECT_VERSION@)

set(ProSelecta_CXX_STANDARD 17)

find_package(Python3 @Python3_MIN_VERSION@ REQUIRED COMPONENTS Interpreter Development)
find_package(ROOT @ROOT_MIN_VERSION@ REQUIRED)

find_package(NuHepMC_CPPUtils REQUIRED)

set(ProSelecta_FOUND TRUE)
include(${CMAKE_CURRENT_LIST_DIR}/ProSelectaTargets.cmake)

if(NOT TARGET ProSelecta::Interpreter)
  set(ProSelecta_FOUND FALSE)
  return()
endif()

get_filename_component(ProSelecta_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)

find_path(ProSelecta_INCLUDE_DIR
  NAMES ProSelecta/ProSelecta.h
  PATHS ${ProSelecta_CMAKE_DIR}/../../../include/
)

find_path(ProSelecta_LIB_DIR
  NAMES libProSelectaInterpreter.so libProSelectaInterpreter.a libProSelectaInterpreter.dylib
  PATHS ${ProSelecta_CMAKE_DIR}/../../
)

find_path(ProSelecta_PREFIX
  NAMES bin/setup.ProSelecta.sh
  PATHS ${ProSelecta_CMAKE_DIR}/../../../
)

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(ProSelecta
    REQUIRED_VARS 
      ProSelecta_INCLUDE_DIR 
      ProSelecta_LIB_DIR
      ProSelecta_PREFIX
    VERSION_VAR
      ProSelecta_VERSION
)

message(STATUS "Found ProSelecta Version: ${ProSelecta_VERSION} in \"${ProSelecta_CMAKE_DIR}\"")
message(STATUS "    ProSelecta_CXX_STANDARD: ${ProSelecta_CXX_STANDARD}")
message(STATUS "    ProSelecta_INCLUDE_DIR: ${ProSelecta_INCLUDE_DIR}")
message(STATUS "    ProSelecta_LIB_DIR: ${ProSelecta_LIB_DIR}")
message(STATUS "    ProSelecta_PREFIX: ${ProSelecta_PREFIX}")

